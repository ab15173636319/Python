# 当不想命名函数名时可以使用，省略了函数名和返回值

# 创建： lambda 参数: 表达式
# 匿名函数能够直接使用定义它的那个作用域里的全局变量。
# 要是匿名函数在另一个函数内部定义，它可以捕获外部函数的局部变量，从而形成闭包。
# 匿名函数的参数和普通函数的参数一样，都是局部变量。
# 和def定义的函数不同，lambda表达式自身不会创建新的命名空间。所以，在lambda内部使用的变量，会按照 LEGB 规则去查找。
# 在循环里创建匿名函数时，要特别注意变量延迟绑定的问题。


# 如：设计一个函数来计算圆的面积和周长

import math

r = 10

area = lambda r: math.pi * r**2
perimeter = lambda r: 2 * math.pi * r

print(f"面积为：{area(r)}")
print(f"周长为：{perimeter(r)}")
